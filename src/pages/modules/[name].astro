---
import Layout from "@layouts/Layout.astro"
import { getModules } from "@scripts/utils"

export function getStaticPaths() {
  return Object.entries(getModules()).map(([name, module]) => ({ params: { name }, props: { module } }))
}

const { name } = Astro.params
const { module } = Astro.props
---

<Layout title={name}>
  <h1>{name}</h1>
  <section class="w-fit grid grid-cols-[auto_auto] gap-x-4 gap-y-2">
    <p>Category</p>
    <a class="text-highlight underline" href=`${import.meta.env.BASE_URL}/categories/${module.category}`
      >{module.category}</a
    >
    <p>Author</p>
    <p>{module.author}</p>
    <p>Created on</p>
    <p>{module.date}</p>
  </section>

  <section class="bg-stone-100 dark:bg-stone-700 p-6 rounded-xl">
    <p>{module.brief}</p>
    {
      module.notes?.length > 0 && (
        <div class="mt-4">
          {module.notes.map(note => (
            <p class="text-sm italic text-muted ">{note}</p>
          ))}
        </div>
      )
    }
  </section>

  {
    Object.entries(module.params || {}).length > 0 && (
      <section>
        <h2 class="section_title">Parameters</h2>
        <div class="section_content">
          {Object.entries(module.params).map(([param_name, args]) => (
            <>
              <p class="font-semibold pb-4">{param_name}</p>
              <div class="w-fit grid grid-cols-[auto_auto] gap-x-4 pb-4 border-b">
                {Object.entries(args).map(([arg_name, arg]) => (
                  <>
                    <p class="font-medium">{arg_name}:</p>
                    <p>{arg}</p>
                  </>
                ))}
              </div>
            </>
          ))}
        </div>
      </section>
    )
  }

  {
    Object.entries(module.inputs || {}).length > 0 && (
      <section>
        <h2 class="section_title">Inputs</h2>
        <div class="section_content">
          {Object.entries(module.inputs).map(([name, value]) => (
            <>
              <p class="font-semibold">{name}</p>
              <p>{value}</p>
            </>
          ))}
        </div>
      </section>
    )
  }

  {
    Object.entries(module.outputs || {}).length > 0 && (
      <section>
        <h2 class="section_title">Outputs</h2>
        <div class="section_content">
          {Object.entries(module.outputs).map(([name, value]) => (
            <>
              <p class="font-semibold">{name}</p>
              <p>{value}</p>
            </>
          ))}
        </div>
      </section>
    )
  }
</Layout>
